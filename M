<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>VCamera App</title>
  <style>
    body {
      margin: 0;
      font-family: 'Arial', sans-serif;
      background: #121212;
      color: #fff;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }

    h1 {
      margin-bottom: 20px;
    }

    #camera {
      width: 100%;
      max-width: 400px;
      border: 2px solid #444;
      border-radius: 10px;
    }

    video {
      width: 100%;
      border-radius: 10px;
    }

    #capture-btn {
      margin: 20px 0;
      padding: 12px 24px;
      font-size: 1rem;
      background-color: #00bcd4;
      border: none;
      border-radius: 8px;
      color: white;
      cursor: pointer;
    }

    #capture-btn:hover {
      background-color: #0097a7;
    }

    #snapshot {
      margin-top: 10px;
      max-width: 100%;
      border-radius: 10px;
    }

    @media (max-width: 600px) {
      h1 {
        font-size: 1.5rem;
      }

      #capture-btn {
        padding: 10px 20px;
        font-size: 0.9rem;
      }
    }
  </style>
</head>
<body>

  <h1>ðŸ“¸ VCamera</h1>

  <div id="camera">
    <video id="video" autoplay playsinline></video>
  </div>

  <button id="capture-btn">Capture</button>

  <canvas id="canvas" style="display:none;"></canvas>
  <img id="snapshot" alt="Captured Image" />

  <script>
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const snapshot = document.getElementById('snapshot');
    const captureBtn = document.getElementById('capture-btn');

    // Access camera
    async function startCamera() {
      try {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true });
        video.srcObject = stream;
      } catch (err) {
        alert('Camera access denied or not supported on this device.');
        console.error(err);
      }
    }

    // Capture image
    captureBtn.addEventListener('click', () => {
      const context = canvas.getContext('2d');
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      context.drawImage(video, 0, 0, canvas.width, canvas.height);
      snapshot.src = canvas.toDataURL('image/png');
    });

    // Start on load
    window.addEventListener('load', startCamera);
  </script>

</body>
</html>
